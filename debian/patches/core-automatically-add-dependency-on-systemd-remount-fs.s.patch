From: Lennart Poettering <lennart@poettering.net>
Date: Wed, 8 Apr 2020 16:08:35 +0200
Subject: core: automatically add dependency on systemd-remount-fs.service if
 StateDirectory= is used

And similar for other settings that require a writable /var/.

Rationale: if these options are used for early-boot services (such as
systemd-pstore.service) we need /var/ writable. And if /var/ is on the
root fs, then systemd-remount-fs.service is the service that ensures
that /var/ is writable.

This allows us to remove explicit deps in services such as
systemd-pstore.service.

(cherry picked from commit f3b7a79b973a28af4f7a592a8b2e199cc194218b)
---
 src/core/unit.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/core/unit.c b/src/core/unit.c
index 842939c..9f7b2de 100644
--- a/src/core/unit.c
+++ b/src/core/unit.c
@@ -1046,6 +1046,16 @@ int unit_add_exec_dependencies(Unit *u, ExecContext *c) {
         if (!MANAGER_IS_SYSTEM(u->manager))
                 return 0;
 
+        /* For the following three directory types we need write access, and /var/ is possibly on the root
+         * fs. Hence order after systemd-remount-fs.service, to ensure things are writable. */
+        if (!strv_isempty(c->directories[EXEC_DIRECTORY_STATE].paths) ||
+            !strv_isempty(c->directories[EXEC_DIRECTORY_CACHE].paths) ||
+            !strv_isempty(c->directories[EXEC_DIRECTORY_LOGS].paths)) {
+                r = unit_add_dependency_by_name(u, UNIT_AFTER, SPECIAL_REMOUNT_FS_SERVICE, true, UNIT_DEPENDENCY_FILE);
+                if (r < 0)
+                        return r;
+        }
+
         if (c->private_tmp) {
                 const char *p;
 
